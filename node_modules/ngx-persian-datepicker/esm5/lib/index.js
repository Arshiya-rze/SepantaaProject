/**
 * @fileoverview added by tsickle
 * Generated from: lib/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgModule } from '@angular/core';
import { MdMonthView } from './month-view';
import { CommonModule } from '@angular/common';
import { OverlayModule } from '@angular/cdk/overlay';
import { A11yModule } from '@angular/cdk/a11y';
import { MdCalendarBody } from './calendar-body';
import { MdYearView } from './year-view';
import { MdDatepicker, MdDatepickerContent, MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER, } from './datepicker';
import { MdDatepickerInput } from './datepicker-input';
import { MdCalendar } from './calendar';
import { MdDatepickerToggle } from './datepicker-toggle';
import { MdDatepickerIntl } from './datepicker-intl';
import { MatButtonModule, MatButtonToggleModule, MatDialogModule, MatIconModule, MatOptionModule, MatSelectModule, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';
import { MdLocaleChanger } from './locale_changer';
import { dateFormat, NativeDateAdapter } from './moment-date-adapter';
export { MdCalendar } from './calendar';
export { MdCalendarCell, MdCalendarBody } from './calendar-body';
export { MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY, MD_DATEPICKER_SCROLL_STRATEGY, MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER, MdDatepickerContent, MdDatepicker } from './datepicker';
export { MD_DATEPICKER_VALUE_ACCESSOR, MD_DATEPICKER_VALIDATORS, MdDatepickerInputEvent, MdDatepickerInput } from './datepicker-input';
export { MdDatepickerIntl } from './datepicker-intl';
export { MdDatepickerToggle } from './datepicker-toggle';
export { MdMonthView } from './month-view';
export { MdYearView } from './year-view';
var MatDatepickerModulePersian = /** @class */ (function () {
    function MatDatepickerModulePersian() {
    }
    MatDatepickerModulePersian.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        MatButtonModule,
                        MatButtonToggleModule,
                        MatDialogModule,
                        MatIconModule,
                        OverlayModule,
                        MatOptionModule,
                        MatSelectModule,
                        // StyleModule,
                        A11yModule,
                    ],
                    exports: [
                        MdCalendar,
                        MdCalendarBody,
                        MdDatepicker,
                        MatButtonToggleModule,
                        MdDatepickerInput,
                        MdDatepickerToggle,
                        MdMonthView,
                        MdYearView,
                    ],
                    declarations: [
                        MdCalendar,
                        MdCalendarBody,
                        MdLocaleChanger,
                        MdDatepicker,
                        MdDatepickerContent,
                        MdDatepickerInput,
                        MdDatepickerToggle,
                        MdMonthView,
                        MdYearView,
                    ],
                    providers: [
                        MdDatepickerIntl,
                        MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER,
                        { provide: DateAdapter, useClass: NativeDateAdapter }, {
                            provide: MAT_DATE_FORMATS,
                            useClass: dateFormat,
                            deps: [DateAdapter]
                        }
                    ],
                    entryComponents: [
                        MdDatepickerContent,
                    ]
                },] }
    ];
    return MatDatepickerModulePersian;
}());
export { MatDatepickerModulePersian };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGVyc2lhbi1kYXRlcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDekMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDN0MsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDdkMsT0FBTyxFQUNILFlBQVksRUFDWixtQkFBbUIsRUFDbkIsc0NBQXNDLEdBQ3pDLE1BQU0sY0FBYyxDQUFDO0FBQ3RCLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUNILGVBQWUsRUFBRSxxQkFBcUIsRUFBRSxlQUFlLEVBQUUsYUFBYSxFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUNySCxnQkFBZ0IsRUFDbkIsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQixPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFDLFVBQVUsRUFBRSxpQkFBaUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBR3BFLDJCQUFjLFlBQVksQ0FBQztBQUMzQiwrQ0FBYyxpQkFBaUIsQ0FBQztBQUNoQyx5S0FBYyxjQUFjLENBQUM7QUFDN0Isa0hBQWMsb0JBQW9CLENBQUM7QUFDbkMsaUNBQWMsbUJBQW1CLENBQUM7QUFDbEMsbUNBQWMscUJBQXFCLENBQUM7QUFDcEMsNEJBQWMsY0FBYyxDQUFDO0FBQzdCLDJCQUFjLGFBQWEsQ0FBQztBQUc1QjtJQUFBO0lBK0NBLENBQUM7O2dCQS9DQSxRQUFRLFNBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFlBQVk7d0JBQ1osZUFBZTt3QkFDZixxQkFBcUI7d0JBQ3JCLGVBQWU7d0JBQ2YsYUFBYTt3QkFDYixhQUFhO3dCQUNiLGVBQWU7d0JBQ2YsZUFBZTt3QkFDZixlQUFlO3dCQUNmLFVBQVU7cUJBQ2I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLFVBQVU7d0JBQ1YsY0FBYzt3QkFDZCxZQUFZO3dCQUNaLHFCQUFxQjt3QkFDckIsaUJBQWlCO3dCQUNqQixrQkFBa0I7d0JBQ2xCLFdBQVc7d0JBQ1gsVUFBVTtxQkFDYjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1YsVUFBVTt3QkFDVixjQUFjO3dCQUNkLGVBQWU7d0JBQ2YsWUFBWTt3QkFDWixtQkFBbUI7d0JBQ25CLGlCQUFpQjt3QkFDakIsa0JBQWtCO3dCQUNsQixXQUFXO3dCQUNYLFVBQVU7cUJBQ2I7b0JBQ0QsU0FBUyxFQUFFO3dCQUNQLGdCQUFnQjt3QkFDaEIsc0NBQXNDO3dCQUN0QyxFQUFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFDLEVBQUU7NEJBQ3JELE9BQU8sRUFBRSxnQkFBZ0I7NEJBQ3pCLFFBQVEsRUFBRSxVQUFVOzRCQUNwQixJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUM7eUJBQUM7cUJBQ3ZCO29CQUNELGVBQWUsRUFBRTt3QkFDYixtQkFBbUI7cUJBQ3RCO2lCQUNKOztJQUVELGlDQUFDO0NBQUEsQUEvQ0QsSUErQ0M7U0FEWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXHJcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcclxuICovXHJcblxyXG5pbXBvcnQge01vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtNZE1vbnRoVmlld30gZnJvbSAnLi9tb250aC12aWV3JztcclxuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7T3ZlcmxheU1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xyXG5pbXBvcnQge0ExMXlNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcclxuaW1wb3J0IHtNZENhbGVuZGFyQm9keX0gZnJvbSAnLi9jYWxlbmRhci1ib2R5JztcclxuaW1wb3J0IHtNZFllYXJWaWV3fSBmcm9tICcuL3llYXItdmlldyc7XHJcbmltcG9ydCB7XHJcbiAgICBNZERhdGVwaWNrZXIsXHJcbiAgICBNZERhdGVwaWNrZXJDb250ZW50LFxyXG4gICAgTURfREFURVBJQ0tFUl9TQ1JPTExfU1RSQVRFR1lfUFJPVklERVIsXHJcbn0gZnJvbSAnLi9kYXRlcGlja2VyJztcclxuaW1wb3J0IHtNZERhdGVwaWNrZXJJbnB1dH0gZnJvbSAnLi9kYXRlcGlja2VyLWlucHV0JztcclxuaW1wb3J0IHtNZENhbGVuZGFyfSBmcm9tICcuL2NhbGVuZGFyJztcclxuaW1wb3J0IHtNZERhdGVwaWNrZXJUb2dnbGV9IGZyb20gJy4vZGF0ZXBpY2tlci10b2dnbGUnO1xyXG5pbXBvcnQge01kRGF0ZXBpY2tlckludGx9IGZyb20gJy4vZGF0ZXBpY2tlci1pbnRsJztcclxuaW1wb3J0IHtcclxuICAgIE1hdEJ1dHRvbk1vZHVsZSwgTWF0QnV0dG9uVG9nZ2xlTW9kdWxlLCBNYXREaWFsb2dNb2R1bGUsIE1hdEljb25Nb2R1bGUsIE1hdE9wdGlvbk1vZHVsZSwgTWF0U2VsZWN0TW9kdWxlLCBEYXRlQWRhcHRlcixcclxuICAgIE1BVF9EQVRFX0ZPUk1BVFNcclxufSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XHJcbmltcG9ydCB7TWRMb2NhbGVDaGFuZ2VyfSBmcm9tICcuL2xvY2FsZV9jaGFuZ2VyJztcclxuaW1wb3J0IHtkYXRlRm9ybWF0LCBOYXRpdmVEYXRlQWRhcHRlcn0gZnJvbSAnLi9tb21lbnQtZGF0ZS1hZGFwdGVyJztcclxuXHJcblxyXG5leHBvcnQgKiBmcm9tICcuL2NhbGVuZGFyJztcclxuZXhwb3J0ICogZnJvbSAnLi9jYWxlbmRhci1ib2R5JztcclxuZXhwb3J0ICogZnJvbSAnLi9kYXRlcGlja2VyJztcclxuZXhwb3J0ICogZnJvbSAnLi9kYXRlcGlja2VyLWlucHV0JztcclxuZXhwb3J0ICogZnJvbSAnLi9kYXRlcGlja2VyLWludGwnO1xyXG5leHBvcnQgKiBmcm9tICcuL2RhdGVwaWNrZXItdG9nZ2xlJztcclxuZXhwb3J0ICogZnJvbSAnLi9tb250aC12aWV3JztcclxuZXhwb3J0ICogZnJvbSAnLi95ZWFyLXZpZXcnO1xyXG5cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIE1hdEJ1dHRvbk1vZHVsZSxcclxuICAgICAgICBNYXRCdXR0b25Ub2dnbGVNb2R1bGUsXHJcbiAgICAgICAgTWF0RGlhbG9nTW9kdWxlLFxyXG4gICAgICAgIE1hdEljb25Nb2R1bGUsXHJcbiAgICAgICAgT3ZlcmxheU1vZHVsZSxcclxuICAgICAgICBNYXRPcHRpb25Nb2R1bGUsXHJcbiAgICAgICAgTWF0U2VsZWN0TW9kdWxlLFxyXG4gICAgICAgIC8vIFN0eWxlTW9kdWxlLFxyXG4gICAgICAgIEExMXlNb2R1bGUsXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIE1kQ2FsZW5kYXIsXHJcbiAgICAgICAgTWRDYWxlbmRhckJvZHksXHJcbiAgICAgICAgTWREYXRlcGlja2VyLFxyXG4gICAgICAgIE1hdEJ1dHRvblRvZ2dsZU1vZHVsZSxcclxuICAgICAgICBNZERhdGVwaWNrZXJJbnB1dCxcclxuICAgICAgICBNZERhdGVwaWNrZXJUb2dnbGUsXHJcbiAgICAgICAgTWRNb250aFZpZXcsXHJcbiAgICAgICAgTWRZZWFyVmlldyxcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBNZENhbGVuZGFyLFxyXG4gICAgICAgIE1kQ2FsZW5kYXJCb2R5LFxyXG4gICAgICAgIE1kTG9jYWxlQ2hhbmdlcixcclxuICAgICAgICBNZERhdGVwaWNrZXIsXHJcbiAgICAgICAgTWREYXRlcGlja2VyQ29udGVudCxcclxuICAgICAgICBNZERhdGVwaWNrZXJJbnB1dCxcclxuICAgICAgICBNZERhdGVwaWNrZXJUb2dnbGUsXHJcbiAgICAgICAgTWRNb250aFZpZXcsXHJcbiAgICAgICAgTWRZZWFyVmlldyxcclxuICAgIF0sXHJcbiAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICBNZERhdGVwaWNrZXJJbnRsLFxyXG4gICAgICAgIE1EX0RBVEVQSUNLRVJfU0NST0xMX1NUUkFURUdZX1BST1ZJREVSLFxyXG4gICAgICAgIHtwcm92aWRlOiBEYXRlQWRhcHRlciwgdXNlQ2xhc3M6IE5hdGl2ZURhdGVBZGFwdGVyfSwge1xyXG4gICAgICAgIHByb3ZpZGU6IE1BVF9EQVRFX0ZPUk1BVFMsXHJcbiAgICAgICAgdXNlQ2xhc3M6IGRhdGVGb3JtYXQsXHJcbiAgICAgICAgZGVwczogW0RhdGVBZGFwdGVyXX1cclxuICAgIF0sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgICAgICBNZERhdGVwaWNrZXJDb250ZW50LFxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWF0RGF0ZXBpY2tlck1vZHVsZVBlcnNpYW4ge1xyXG59XHJcbiJdfQ==